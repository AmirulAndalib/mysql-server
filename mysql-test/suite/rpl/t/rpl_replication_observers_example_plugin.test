#
# The purpose of this test is to demonstrate the capabilities of the
# Replication Observers example plugin and to assess its correct functionality
#
# The plugin is loaded at startup in order to be able to capture Server events.
#
# Since one wants to test only the hook execution in place, a test
# plugin was created to serve those needs. The plugin will print once
# if the hook method is executed and the test will verify if the hook
# was called.
#
# This test will use two different groups of hooks/observers:
# - Server State
# - Transaction
#
# Server State uses hooks:
# - before_handle_connection: Called before a new client connection.
# - before_recovery: Called before the server initializes all
#                    recovery procedures.
# - after_engine_recovery: After binlog engine is ready.
# - after_recovery: Called after the server ends all
#                   recovery procedures.
# - before_server_shutdown: Called before the server starts a shut down.
# - after_server_shutdown: Called after the server starts a shut down.
#
# Transaction hooks exist on binlog. As such, binlog must be enabled in
# order for them to be called. They are:
# - before_dml: Called before any dml instruction is issued.
# - before_commit: Called before a transaction is committed.
# - before_rollback: Called before a transaction is rollbacked.
# - after_commit: Called after a transaction is committed.
# - after_rollback: Called after a transaction is rollbacked.
#

--source include/not_embedded.inc
--source include/have_log_bin.inc
--source include/not_windows.inc
--source include/have_binlog_format_mixed.inc
--source include/have_replication_observers_example_plugin.inc

--echo #
--echo # Cause an explicit transaction in order to Trans Observer to be called
--echo #

CREATE TABLE t1 (c1 INT) Engine=InnoDB;

INSERT t1 VALUES(1);

BEGIN;
INSERT t1 VALUES(2);
ROLLBACK;

DROP TABLE t1;

--echo #
--echo # Cause an explicit restart in order to Server Observer to be called
--echo #

--source include/restart_mysqld.inc

--echo #
--echo # Verify that all Server Listening hooks were called
--echo #

--let GREP_FILE=$MYSQLTEST_VARDIR/log/mysqld.1.err
--let GREP_PATTERN=replication_observers_example_plugin:before_handle_connection
--source extra/rpl_tests/grep_pattern.inc

--let GREP_FILE=$MYSQLTEST_VARDIR/log/mysqld.1.err
--let GREP_PATTERN=replication_observers_example_plugin:before_recovery
--source extra/rpl_tests/grep_pattern.inc

--let GREP_FILE=$MYSQLTEST_VARDIR/log/mysqld.1.err
--let GREP_PATTERN=replication_observers_example_plugin:after_engine_recovery
--source extra/rpl_tests/grep_pattern.inc

--let GREP_FILE=$MYSQLTEST_VARDIR/log/mysqld.1.err
--let GREP_PATTERN=replication_observers_example_plugin:after_recovery
--source extra/rpl_tests/grep_pattern.inc

--let GREP_FILE=$MYSQLTEST_VARDIR/log/mysqld.1.err
--let GREP_PATTERN=replication_observers_example_plugin:before_server_shutdown
--source extra/rpl_tests/grep_pattern.inc

--let GREP_FILE=$MYSQLTEST_VARDIR/log/mysqld.1.err
--let GREP_PATTERN=replication_observers_example_plugin:after_server_shutdown
--source extra/rpl_tests/grep_pattern.inc

--echo #
--echo # Verify that all Trans Listening hooks were called
--echo #

--let GREP_FILE=$MYSQLTEST_VARDIR/log/mysqld.1.err
--let GREP_PATTERN=replication_observers_example_plugin:trans_before_dml
--source extra/rpl_tests/grep_pattern.inc

--let GREP_FILE=$MYSQLTEST_VARDIR/log/mysqld.1.err
--let GREP_PATTERN=replication_observers_example_plugin:trans_before_commit
--source extra/rpl_tests/grep_pattern.inc

--let GREP_FILE=$MYSQLTEST_VARDIR/log/mysqld.1.err
--let GREP_PATTERN=replication_observers_example_plugin:trans_before_rollback
--source extra/rpl_tests/grep_pattern.inc

--let GREP_FILE=$MYSQLTEST_VARDIR/log/mysqld.1.err
--let GREP_PATTERN=replication_observers_example_plugin:trans_after_commit
--source extra/rpl_tests/grep_pattern.inc

--let GREP_FILE=$MYSQLTEST_VARDIR/log/mysqld.1.err
--let GREP_PATTERN=replication_observers_example_plugin:trans_after_rollback
--source extra/rpl_tests/grep_pattern.inc

--echo End of test
