# I. Reproduce race condition between popping the protocol and selecting
#    from I_S processlist (Bug#34930219):
# 1. Create X Protocol session (X1) using "x_root" account and hang it
#    before popping the protocol (sync point: wait_before_popping_protocol)
# 2. Create classic protocol session(C1) and list all sessions,
#    hang it at sync point 'wait_before_returning_protocol'.
# 3. Wait until C1 is at the expected sync point, then wakeup X1.


#
# Connect X1, send signal.

#
# Connect Cl, wait for signal.
SET DEBUG_SYNC= 'now WAIT_FOR waiting_popping';

#
# Use C1 and list all sessions, wait before returning the protocol.
SET DEBUG_SYNC= 'wait_before_checking_alive SIGNAL waiting_checking WAIT_FOR continue_checking';
SELECT COUNT(*) > 0 from information_schema.processlist;

#
# From the default connection, wait for threads being halted, then
# let both clients continue.
SET DEBUG_SYNC= 'now WAIT_FOR waiting_checking';
SET DEBUG_SYNC= 'now SIGNAL continue_popping';
SET DEBUG_SYNC= 'now SIGNAL continue_checking';

#
# Go back to C1 and reap.
COUNT(*) > 0
1
Warnings:
Warning	1287	'INFORMATION_SCHEMA.PROCESSLIST' is deprecated and will be removed in a future release. Please use performance_schema.processlist instead
