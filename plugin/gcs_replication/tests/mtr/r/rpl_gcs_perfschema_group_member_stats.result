###################
Cleanup and server setup
###################
# restart
server2
RESET MASTER;
server1
RESET MASTER;
server1
SET GLOBAL gcs_replication_plugin_group_name= "8a84f397-aaa4-18df-89ab-c70aa9823561";
###################
Test start values
###################
include/assert.inc [The value of member_id should be empty before starting gcs]
include/assert.inc [The value of view_id should be EMPTY before GCS start]
include/assert.inc [The value of Count_Transactions_in_queue should be 0 before starting gcs]
include/assert.inc [The value of Count_Transactions_checked should be 0 before starting gcs]
include/assert.inc [The value of Count_conflicts_detected should be 0 before starting gcs]
include/assert.inc [The value of Count_Transactions_validating should be 0 before starting gcs]
include/assert.inc [The value of Transactions_Committed_all_members should be empty before starting gcs]
include/assert.inc [The value of Last_conflict_free_transaction should be 0 before starting gcs]
########################################################
Values being updated after executing some transactions
########################################################
include/start_gcs_replication.inc
include/assert.inc [The value of view_id should be a number followed by ONE at GCS start]
CREATE TABLE t1 (c1 INT NOT NULL PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES (2);
INSERT INTO t1 VALUES (3);
INSERT INTO t1 values (4);
server2
SET @debug_save= @@GLOBAL.DEBUG;
SET @@GLOBAL.DEBUG='d,recovery_thread_wait';
SET GLOBAL gcs_replication_plugin_group_name= "8a84f397-aaa4-18df-89ab-c70aa9823561";
START GCS_REPLICATION;
include/rpl_gcs_wait_for_node_state.inc
# Apply some transactions on the first node so that the queue of the second node is not empty.
server1
INSERT INTO t1 VALUES (5);
INSERT INTO t1 VALUES (6);
# Check for the transaction in the applier queue and then unblock the recovery.
server2
Timeout in wait_condition.inc for SELECT Count_Transactions_in_queue = 2 from performance_schema.replication_group_member_stats;
[ The value of Count_Transactions_in_queue should be 2 when the applier has not processed the transaction queue ]
SET @@GLOBAL.DEBUG= @debug_save;
SET DEBUG_SYNC= "now SIGNAL signal.recovery_continue";
include/rpl_gcs_wait_for_node_state.inc
server1
include/assert.inc [The value of member_id should be equal to server UUID after starting gcs]
include/assert.inc [The value of Count_Transactions_checked should be 6 after starting gcs]
include/assert.inc [The value of Count_conflicts_detected should be 0 after starting gcs]
include/assert.inc [The value of Count_Transactions_validating should be 5 after starting gcs]
include/assert.inc [The value of Transactions_committed_all_members should be empty currently for the gcs]
include/assert.inc [The value of Last_Conflict_free_transaction should be the gtid of the last applied transaction.]
[ The value of stable_set should be equal to the node GTID executed set ]
DROP TABLE t1;
####################################
The values being checked after stop
####################################
include/stop_gcs_replication.inc
include/stop_gcs_replication.inc
